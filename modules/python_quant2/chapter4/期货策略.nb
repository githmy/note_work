{
 "metadata": {
  "signature": "sha256:5415c27f246d5b4bab6086c3b74895e00f42275781e19dafa91ab9ea44fdecd3"
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "strategy",
     "collapsed": true,
     "has_detail": true,
     "id": "56FC8958F9FE478ABB8C90CA98D8D66F",
     "input": "universe = ['IFM0']  # \u7b56\u7565\u671f\u8d27\u5408\u7ea6\nstart = '2015-01-01'                       # \u56de\u6d4b\u5f00\u59cb\u65f6\u95f4\nend  = '2018-01-11'                        # \u56de\u6d4b\u7ed3\u675f\u65f6\u95f4\ncapital_base = 600000                     # \u521d\u8bd5\u53ef\u7528\u8d44\u91d1\nrefresh_rate = 1                          # \u8c03\u4ed3\u5468\u671f\nfreq = 'm'                                 # \u8c03\u4ed3\u9891\u7387\uff1am-> \u5206\u949f\uff1bd-> \u65e5\n\ncommission = Commission(buycost=0.0, sellcost=0.0, unit='perValue') #\u8bbe\u7f6e\u80a1\u6307\u671f\u8d27\u4ea4\u6613\u624b\u7eed\u8d39\nslippage = Slippage(value=0, unit='perValue') #\u8bbe\u7f6e\u4ef7\u683c\u6ed1\u70b9\u767e\u5206\u6bd4\n\naccounts = {\n    'fantasy_account': AccountConfig(account_type='futures', capital_base=capital_base, commission=commission, slippage=slippage)\n} #\u8bbe\u7f6e\u865a\u62df\u671f\u8d27\u8d26\u6237\n\ndef initialize(context):           # \u521d\u59cb\u5316\u865a\u62df\u671f\u8d27\u8d26\u6237\uff0c\u4e00\u822c\u7528\u4e8e\u8bbe\u7f6e\u8ba1\u6570\u5668\uff0c\u56de\u6d4b\u8f85\u52a9\u53d8\u91cf\u7b49\u3002\n    pass\n\ndef handle_data(context):          # \u56de\u6d4b\u8c03\u4ed3\u903b\u8f91\uff0c\u6bcf\u4e2a\u8c03\u4ed3\u5468\u671f\u8fd0\u884c\u4e00\u6b21\uff0c\u53ef\u5728\u6b64\u51fd\u6570\u5185\u5b9e\u73b0\u4fe1\u53f7\u751f\u4ea7\uff0c\u751f\u6210\u8c03\u4ed3\u6307\u4ee4\u3002\n    futures_account = context.get_account('fantasy_account')\n    symbol = context.get_symbol(universe[0]) \n    if context.current_minute == '09:30':\n        futures_account.order(symbol, 1, 'open')\n    # \u5e73\u4ed3\n    elif context.current_minute == '09:36':\n        long_position = futures_account.get_positions().get(symbol, dict()).long_amount\n        if long_position > 0:\n            futures_account.order(symbol, -long_position, 'close')\n    # \u6b62\u635f\n    elif context.current_minute < '09:36':\n        if len(futures_account.get_positions()) > 0 and futures_account.get_positions().get(symbol).today_profit<-5000:\n            long_position = futures_account.get_positions().get(symbol, dict()).long_amount\n            if long_position > 0:\n                futures_account.order(symbol, -long_position, 'close')",
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": "Warning: refresh_rate\u7684\u503c\u4ec5\u4f5c\u7528\u4e8e\u5206\u949f\u7ebf\u3002\u82e5\u60f3\u5bf9\u65e5\u7ebf\u8fdb\u884c\u63a7\u5236\uff0c\u8bf7\u4f7f\u7528\u5982\u4e0b\u5b9a\u4e49: refresh_rate = (\u65e5\u7ebfrefresh_rate\uff0c \u5206\u949f\u7ebfrefresh_rate)"
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": "\n"
      },
      {
       "ename": "KeyboardInterrupt",
       "evalue": "",
       "output_type": "pyerr",
       "traceback": [
        "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m\n\u001b[1;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
        "\u001b[1;32m<mercury-input-1-56FC8958F9FE478ABB8C90CA98D8D66F>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m()\u001b[0m\n\u001b[0;32m     71\u001b[0m                                             \u001b[0msecurity_cost\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0msecurity_cost\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mmax_history_window\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mmax_history_window\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     72\u001b[0m                                             \u001b[0maccounts\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0maccounts\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mpreload_data\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0m_QUARTZ_PRELOAD_DATA\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m---> 73\u001b[1;33m                                             display=True, return_quartz_data=True)\n\u001b[0m\u001b[0;32m     74\u001b[0m     \u001b[0m_QUARTZ_CACHE\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'start'\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mstart\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     75\u001b[0m     \u001b[0m_QUARTZ_CACHE\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'end'\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mend\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
        "\u001b[1;32m/home/ipython/anaconda/lib/python2.7/site-packages/mercuryq-quartz.egg/quartz/backtest.pyc\u001b[0m in \u001b[0;36mbacktest\u001b[1;34m(start, end, benchmark, universe, capital_base, initialize, handle_data, post_trading_day, commission, slippage, refresh_rate, freq, security_base, security_cost, max_history_window, accounts, *args, **kwargs)\u001b[0m\n",
        "\u001b[1;32m/home/ipython/anaconda/lib/python2.7/site-packages/mercuryq-quartz.egg/quartz/backtest.pyc\u001b[0m in \u001b[0;36mbacktest_intraday\u001b[1;34m(context, backtest_calendar, sim_params, backtest_data_roller, **kwargs)\u001b[0m\n",
        "\u001b[1;32m/home/ipython/anaconda/lib/python2.7/site-packages/mercuryq-quartz.egg/quartz/utils/output_utils.pyc\u001b[0m in \u001b[0;36msend_display_data\u001b[1;34m(report, current_idx, total_length)\u001b[0m\n",
        "\u001b[1;32m/home/ipython/anaconda/lib/python2.7/site-packages/mercuryq-quartz.egg/quartz/performance/report.pyc\u001b[0m in \u001b[0;36mperf\u001b[1;34m(self)\u001b[0m\n",
        "\u001b[1;32m/home/ipython/anaconda/lib/python2.7/site-packages/mercuryq-quartz.egg/quartz/performance/report.pyc\u001b[0m in \u001b[0;36mbt\u001b[1;34m(self)\u001b[0m\n",
        "\u001b[1;32m/home/ipython/anaconda/lib/python2.7/site-packages/mercuryq-quartz.egg/quartz/performance/report.pyc\u001b[0m in \u001b[0;36mbt_collections\u001b[1;34m(self)\u001b[0m\n",
        "\u001b[1;32m/home/ipython/anaconda/lib/python2.7/site-packages/mercuryq-quartz.egg/quartz/performance/report.pyc\u001b[0m in \u001b[0;36m<dictcomp>\u001b[1;34m((account_name, report))\u001b[0m\n",
        "\u001b[1;32m/home/ipython/anaconda/lib/python2.7/site-packages/mercuryq-quartz.egg/quartz/performance/report.pyc\u001b[0m in \u001b[0;36moutput\u001b[1;34m(self)\u001b[0m\n",
        "\u001b[1;32m/home/ipython/anaconda/lib/python2.7/site-packages/pandas/core/frame.pyc\u001b[0m in \u001b[0;36m__init__\u001b[1;34m(self, data, index, columns, dtype, copy)\u001b[0m\n\u001b[0;32m    222\u001b[0m                                  dtype=dtype, copy=copy)\n\u001b[0;32m    223\u001b[0m         \u001b[1;32melif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mdict\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 224\u001b[1;33m             \u001b[0mmgr\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_init_dict\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mindex\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mcolumns\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    225\u001b[0m         \u001b[1;32melif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mma\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mMaskedArray\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    226\u001b[0m             \u001b[1;32mimport\u001b[0m \u001b[0mnumpy\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mma\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mmrecords\u001b[0m \u001b[1;32mas\u001b[0m \u001b[0mmrecords\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
        "\u001b[1;32m/home/ipython/anaconda/lib/python2.7/site-packages/pandas/core/frame.pyc\u001b[0m in \u001b[0;36m_init_dict\u001b[1;34m(self, data, index, columns, dtype)\u001b[0m\n\u001b[0;32m    358\u001b[0m             \u001b[0marrays\u001b[0m \u001b[1;33m=\u001b[0m \u001b[1;33m[\u001b[0m\u001b[0mdata\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mk\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;32mfor\u001b[0m \u001b[0mk\u001b[0m \u001b[1;32min\u001b[0m \u001b[0mkeys\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    359\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 360\u001b[1;33m         \u001b[1;32mreturn\u001b[0m \u001b[0m_arrays_to_mgr\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0marrays\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mdata_names\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mindex\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mcolumns\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    361\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    362\u001b[0m     \u001b[1;32mdef\u001b[0m \u001b[0m_init_ndarray\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mvalues\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mindex\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mcolumns\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mNone\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mFalse\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
        "\u001b[1;32m/home/ipython/anaconda/lib/python2.7/site-packages/pandas/core/frame.pyc\u001b[0m in \u001b[0;36m_arrays_to_mgr\u001b[1;34m(arrays, arr_names, index, columns, dtype)\u001b[0m\n\u001b[0;32m   5234\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   5235\u001b[0m     \u001b[1;31m# don't force copy because getting jammed in an ndarray anyway\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 5236\u001b[1;33m     \u001b[0marrays\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0m_homogenize\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0marrays\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mindex\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   5237\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   5238\u001b[0m     \u001b[1;31m# from BlockManager perspective\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
        "\u001b[1;32m/home/ipython/anaconda/lib/python2.7/site-packages/pandas/core/frame.pyc\u001b[0m in \u001b[0;36m_homogenize\u001b[1;34m(data, index, dtype)\u001b[0m\n\u001b[0;32m   5544\u001b[0m                 \u001b[0mv\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mlib\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mfast_multiget\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mv\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0moindex\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mvalues\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mdefault\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mNA\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   5545\u001b[0m             v = _sanitize_array(v, index, dtype=dtype, copy=False,\n\u001b[1;32m-> 5546\u001b[1;33m                                 raise_cast_failure=False)\n\u001b[0m\u001b[0;32m   5547\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   5548\u001b[0m         \u001b[0mhomogenized\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mv\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
        "\u001b[1;32m/home/ipython/anaconda/lib/python2.7/site-packages/pandas/core/series.pyc\u001b[0m in \u001b[0;36m_sanitize_array\u001b[1;34m(data, index, dtype, copy, raise_cast_failure)\u001b[0m\n\u001b[0;32m   2866\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   2867\u001b[0m         \u001b[1;32melse\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 2868\u001b[1;33m             \u001b[0msubarr\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0m_possibly_convert_platform\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   2869\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   2870\u001b[0m         \u001b[0msubarr\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0m_possibly_cast_to_datetime\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0msubarr\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
        "\u001b[1;32m/home/ipython/anaconda/lib/python2.7/site-packages/pandas/core/common.pyc\u001b[0m in \u001b[0;36m_possibly_convert_platform\u001b[1;34m(values)\u001b[0m\n\u001b[0;32m   1000\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1001\u001b[0m     \u001b[1;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;33m(\u001b[0m\u001b[0mlist\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mtuple\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 1002\u001b[1;33m         \u001b[0mvalues\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mlib\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mlist_to_object_array\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   1003\u001b[0m     \u001b[1;32mif\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;34m'dtype'\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mNone\u001b[0m\u001b[1;33m)\u001b[0m \u001b[1;33m==\u001b[0m \u001b[0mnp\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mobject_\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1004\u001b[0m         \u001b[1;32mif\u001b[0m \u001b[0mhasattr\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;34m'_values'\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
        "\u001b[1;31mKeyboardInterrupt\u001b[0m: "
       ]
      }
     ],
     "trading_days": [
      1420416000000,
      1420502400000,
      1420588800000,
      1420675200000,
      1420761600000,
      1421020800000,
      1421107200000,
      1421193600000,
      1421280000000,
      1421366400000,
      1421625600000,
      1421712000000,
      1421798400000,
      1421884800000,
      1421971200000,
      1422230400000,
      1422316800000,
      1422403200000,
      1422489600000,
      1422576000000,
      1422835200000,
      1422921600000,
      1423008000000,
      1423094400000,
      1423180800000,
      1423440000000,
      1423526400000,
      1423612800000,
      1423699200000,
      1423785600000,
      1424044800000,
      1424131200000,
      1424822400000,
      1424908800000,
      1424995200000,
      1425254400000,
      1425340800000,
      1425427200000,
      1425513600000,
      1425600000000,
      1425859200000,
      1425945600000,
      1426032000000,
      1426118400000,
      1426204800000,
      1426464000000,
      1426550400000,
      1426636800000,
      1426723200000,
      1426809600000,
      1427068800000,
      1427155200000,
      1427241600000,
      1427328000000,
      1427414400000,
      1427673600000,
      1427760000000,
      1427846400000,
      1427932800000,
      1428019200000,
      1428364800000,
      1428451200000,
      1428537600000,
      1428624000000,
      1428883200000,
      1428969600000,
      1429056000000,
      1429142400000,
      1429228800000,
      1429488000000,
      1429574400000,
      1429660800000,
      1429747200000,
      1429833600000,
      1430092800000,
      1430179200000,
      1430265600000,
      1430352000000,
      1430697600000,
      1430784000000,
      1430870400000,
      1430956800000,
      1431043200000,
      1431302400000,
      1431388800000,
      1431475200000,
      1431561600000,
      1431648000000,
      1431907200000,
      1431993600000,
      1432080000000,
      1432166400000,
      1432252800000,
      1432512000000,
      1432598400000,
      1432684800000,
      1432771200000,
      1432857600000,
      1433116800000,
      1433203200000,
      1433289600000,
      1433376000000,
      1433462400000,
      1433721600000,
      1433808000000,
      1433894400000,
      1433980800000,
      1434067200000,
      1434326400000,
      1434412800000,
      1434499200000,
      1434585600000,
      1434672000000,
      1435017600000,
      1435104000000,
      1435190400000,
      1435276800000,
      1435536000000,
      1435622400000,
      1435708800000,
      1435795200000,
      1435881600000,
      1436140800000,
      1436227200000,
      1436313600000,
      1436400000000,
      1436486400000,
      1436745600000,
      1436832000000,
      1436918400000,
      1437004800000,
      1437091200000,
      1437350400000,
      1437436800000,
      1437523200000,
      1437609600000,
      1437696000000,
      1437955200000,
      1438041600000,
      1438128000000,
      1438214400000,
      1438300800000,
      1438560000000,
      1438646400000,
      1438732800000,
      1438819200000,
      1438905600000,
      1439164800000,
      1439251200000,
      1439337600000,
      1439424000000,
      1439510400000,
      1439769600000,
      1439856000000,
      1439942400000,
      1440028800000,
      1440115200000,
      1440374400000,
      1440460800000,
      1440547200000,
      1440633600000,
      1440720000000,
      1440979200000,
      1441065600000,
      1441152000000,
      1441584000000,
      1441670400000,
      1441756800000,
      1441843200000,
      1441929600000,
      1442188800000,
      1442275200000,
      1442361600000,
      1442448000000,
      1442534400000,
      1442793600000,
      1442880000000,
      1442966400000,
      1443052800000,
      1443139200000,
      1443398400000,
      1443484800000,
      1443571200000,
      1444262400000,
      1444348800000,
      1444608000000,
      1444694400000,
      1444780800000,
      1444867200000,
      1444953600000,
      1445212800000,
      1445299200000,
      1445385600000,
      1445472000000,
      1445558400000,
      1445817600000,
      1445904000000,
      1445990400000,
      1446076800000,
      1446163200000,
      1446422400000,
      1446508800000,
      1446595200000,
      1446681600000,
      1446768000000,
      1447027200000,
      1447113600000,
      1447200000000,
      1447286400000,
      1447372800000,
      1447632000000,
      1447718400000,
      1447804800000,
      1447891200000,
      1447977600000,
      1448236800000,
      1448323200000,
      1448409600000,
      1448496000000,
      1448582400000,
      1448841600000,
      1448928000000,
      1449014400000,
      1449100800000,
      1449187200000,
      1449446400000,
      1449532800000,
      1449619200000,
      1449705600000,
      1449792000000,
      1450051200000,
      1450137600000,
      1450224000000,
      1450310400000,
      1450396800000,
      1450656000000,
      1450742400000,
      1450828800000,
      1450915200000,
      1451001600000,
      1451260800000,
      1451347200000,
      1451433600000,
      1451520000000,
      1451865600000,
      1451952000000,
      1452038400000,
      1452124800000,
      1452211200000,
      1452470400000,
      1452556800000,
      1452643200000,
      1452729600000,
      1452816000000,
      1453075200000,
      1453161600000,
      1453248000000,
      1453334400000,
      1453420800000,
      1453680000000,
      1453766400000,
      1453852800000,
      1453939200000,
      1454025600000,
      1454284800000,
      1454371200000,
      1454457600000,
      1454544000000,
      1454630400000,
      1455494400000,
      1455580800000,
      1455667200000,
      1455753600000,
      1455840000000,
      1456099200000,
      1456185600000,
      1456272000000,
      1456358400000,
      1456444800000,
      1456704000000,
      1456790400000,
      1456876800000,
      1456963200000,
      1457049600000,
      1457308800000,
      1457395200000,
      1457481600000,
      1457568000000,
      1457654400000,
      1457913600000,
      1458000000000,
      1458086400000,
      1458172800000,
      1458259200000,
      1458518400000,
      1458604800000,
      1458691200000,
      1458777600000,
      1458864000000,
      1459123200000,
      1459209600000,
      1459296000000,
      1459382400000,
      1459468800000,
      1459814400000,
      1459900800000,
      1459987200000,
      1460073600000,
      1460332800000,
      1460419200000,
      1460505600000,
      1460592000000,
      1460678400000,
      1460937600000,
      1461024000000,
      1461110400000,
      1461196800000,
      1461283200000,
      1461542400000,
      1461628800000,
      1461715200000,
      1461801600000,
      1461888000000,
      1462233600000,
      1462320000000,
      1462406400000,
      1462492800000,
      1462752000000,
      1462838400000,
      1462924800000,
      1463011200000,
      1463097600000,
      1463356800000,
      1463443200000,
      1463529600000,
      1463616000000,
      1463702400000,
      1463961600000,
      1464048000000,
      1464134400000,
      1464220800000,
      1464307200000,
      1464566400000,
      1464652800000,
      1464739200000,
      1464825600000,
      1464912000000,
      1465171200000,
      1465257600000,
      1465344000000,
      1465776000000,
      1465862400000,
      1465948800000,
      1466035200000,
      1466121600000,
      1466380800000,
      1466467200000,
      1466553600000,
      1466640000000,
      1466726400000,
      1466985600000,
      1467072000000,
      1467158400000,
      1467244800000,
      1467331200000,
      1467590400000,
      1467676800000,
      1467763200000,
      1467849600000,
      1467936000000,
      1468195200000,
      1468281600000,
      1468368000000,
      1468454400000,
      1468540800000,
      1468800000000,
      1468886400000,
      1468972800000,
      1469059200000,
      1469145600000,
      1469404800000,
      1469491200000,
      1469577600000,
      1469664000000,
      1469750400000,
      1470009600000,
      1470096000000,
      1470182400000,
      1470268800000,
      1470355200000,
      1470614400000,
      1470700800000,
      1470787200000,
      1470873600000,
      1470960000000,
      1471219200000,
      1471305600000,
      1471392000000,
      1471478400000,
      1471564800000,
      1471824000000,
      1471910400000,
      1471996800000,
      1472083200000,
      1472169600000,
      1472428800000,
      1472515200000,
      1472601600000,
      1472688000000,
      1472774400000,
      1473033600000,
      1473120000000,
      1473206400000,
      1473292800000,
      1473379200000,
      1473638400000,
      1473724800000,
      1473811200000,
      1474243200000,
      1474329600000,
      1474416000000,
      1474502400000,
      1474588800000,
      1474848000000,
      1474934400000,
      1475020800000,
      1475107200000,
      1475193600000,
      1476057600000,
      1476144000000,
      1476230400000,
      1476316800000,
      1476403200000,
      1476662400000,
      1476748800000,
      1476835200000,
      1476921600000,
      1477008000000,
      1477267200000,
      1477353600000,
      1477440000000,
      1477526400000,
      1477612800000,
      1477872000000,
      1477958400000,
      1478044800000,
      1478131200000,
      1478217600000,
      1478476800000,
      1478563200000,
      1478649600000,
      1478736000000,
      1478822400000,
      1479081600000,
      1479168000000,
      1479254400000,
      1479340800000,
      1479427200000,
      1479686400000,
      1479772800000,
      1479859200000,
      1479945600000,
      1480032000000,
      1480291200000,
      1480377600000,
      1480464000000,
      1480550400000,
      1480636800000,
      1480896000000,
      1480982400000,
      1481068800000,
      1481155200000,
      1481241600000,
      1481500800000,
      1481587200000,
      1481673600000,
      1481760000000,
      1481846400000,
      1482105600000,
      1482192000000,
      1482278400000,
      1482364800000,
      1482451200000,
      1482710400000,
      1482796800000,
      1482883200000,
      1482969600000,
      1483056000000,
      1483401600000,
      1483488000000,
      1483574400000,
      1483660800000,
      1483920000000,
      1484006400000,
      1484092800000,
      1484179200000,
      1484265600000,
      1484524800000,
      1484611200000,
      1484697600000,
      1484784000000,
      1484870400000,
      1485129600000,
      1485216000000,
      1485302400000,
      1485388800000,
      1486080000000,
      1486339200000,
      1486425600000,
      1486512000000,
      1486598400000,
      1486684800000,
      1486944000000,
      1487030400000,
      1487116800000,
      1487203200000,
      1487289600000,
      1487548800000,
      1487635200000,
      1487721600000,
      1487808000000,
      1487894400000,
      1488153600000,
      1488240000000,
      1488326400000,
      1488412800000,
      1488499200000,
      1488758400000,
      1488844800000,
      1488931200000,
      1489017600000,
      1489104000000,
      1489363200000,
      1489449600000,
      1489536000000,
      1489622400000,
      1489708800000,
      1489968000000,
      1490054400000,
      1490140800000,
      1490227200000,
      1490313600000,
      1490572800000,
      1490659200000,
      1490745600000,
      1490832000000,
      1490918400000,
      1491350400000,
      1491436800000,
      1491523200000,
      1491782400000,
      1491868800000,
      1491955200000,
      1492041600000,
      1492128000000,
      1492387200000,
      1492473600000,
      1492560000000,
      1492646400000,
      1492732800000,
      1492992000000,
      1493078400000,
      1493164800000,
      1493251200000,
      1493337600000,
      1493683200000,
      1493769600000,
      1493856000000,
      1493942400000,
      1494201600000,
      1494288000000,
      1494374400000,
      1494460800000,
      1494547200000,
      1494806400000,
      1494892800000,
      1494979200000,
      1495065600000,
      1495152000000,
      1495411200000,
      1495497600000,
      1495584000000,
      1495670400000,
      1495756800000,
      1496188800000,
      1496275200000,
      1496361600000,
      1496620800000,
      1496707200000,
      1496793600000,
      1496880000000,
      1496966400000,
      1497225600000,
      1497312000000,
      1497398400000,
      1497484800000,
      1497571200000,
      1497830400000,
      1497916800000,
      1498003200000,
      1498089600000,
      1498176000000,
      1498435200000,
      1498521600000,
      1498608000000,
      1498694400000,
      1498780800000,
      1499040000000,
      1499126400000,
      1499212800000,
      1499299200000,
      1499385600000,
      1499644800000,
      1499731200000,
      1499817600000,
      1499904000000,
      1499990400000,
      1500249600000,
      1500336000000,
      1500422400000,
      1500508800000,
      1500595200000,
      1500854400000,
      1500940800000,
      1501027200000,
      1501113600000,
      1501200000000,
      1501459200000,
      1501545600000,
      1501632000000,
      1501718400000,
      1501804800000,
      1502064000000,
      1502150400000,
      1502236800000,
      1502323200000,
      1502409600000,
      1502668800000,
      1502755200000,
      1502841600000,
      1502928000000,
      1503014400000,
      1503273600000,
      1503360000000,
      1503446400000,
      1503532800000,
      1503619200000,
      1503878400000,
      1503964800000,
      1504051200000,
      1504137600000,
      1504224000000,
      1504483200000,
      1504569600000,
      1504656000000,
      1504742400000,
      1504828800000,
      1505088000000,
      1505174400000,
      1505260800000,
      1505347200000,
      1505433600000,
      1505692800000,
      1505779200000,
      1505865600000,
      1505952000000,
      1506038400000,
      1506297600000,
      1506384000000,
      1506470400000,
      1506556800000,
      1506643200000,
      1507507200000,
      1507593600000,
      1507680000000,
      1507766400000,
      1507852800000,
      1508112000000,
      1508198400000,
      1508284800000,
      1508371200000,
      1508457600000,
      1508716800000,
      1508803200000,
      1508889600000,
      1508976000000,
      1509062400000,
      1509321600000,
      1509408000000,
      1509494400000,
      1509580800000,
      1509667200000,
      1509926400000,
      1510012800000,
      1510099200000,
      1510185600000,
      1510272000000,
      1510531200000,
      1510617600000,
      1510704000000,
      1510790400000,
      1510876800000,
      1511136000000,
      1511222400000,
      1511308800000,
      1511395200000,
      1511481600000,
      1511740800000,
      1511827200000,
      1511913600000,
      1512000000000,
      1512086400000,
      1512345600000,
      1512432000000,
      1512518400000,
      1512604800000,
      1512691200000,
      1512950400000,
      1513036800000,
      1513123200000,
      1513209600000,
      1513296000000,
      1513555200000,
      1513641600000,
      1513728000000,
      1513814400000,
      1513900800000,
      1514160000000,
      1514246400000,
      1514332800000,
      1514419200000,
      1514505600000,
      1514851200000,
      1514937600000,
      1515024000000,
      1515110400000,
      1515369600000,
      1515456000000,
      1515542400000,
      1515628800000
     ],
     "trusted": true
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "id": "6765698E6A5545E48C179E27A95C9260",
     "input": [],
     "language": "python",
     "metadata": {},
     "outputs": []
    }
   ],
   "metadata": {}
  }
 ]
}